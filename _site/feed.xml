<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-03-12T21:09:47+00:00</updated><id>http://localhost:4000/</id><title type="html">Base</title><subtitle>Knowledge base template for Jekyll.</subtitle><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><entry><title type="html">Umweltsensor</title><link href="http://localhost:4000/sensoren/sensoren-umweltsensor/" rel="alternate" type="text/html" title="Umweltsensor" /><published>2020-03-11T00:00:00+00:00</published><updated>2020-03-11T00:00:00+00:00</updated><id>http://localhost:4000/sensoren/sensoren-umweltsensor</id><content type="html" xml:base="http://localhost:4000/sensoren/sensoren-umweltsensor/">&lt;p&gt;Mit dem Sensor BME680 kannst du eine verschiedene Auswahl an Phänomenen messen. Lufttemperatur, relative Luftfeuchtigkeit, Luftdruck und Luftqualität können mit dem BME680 bestimmt werden. Er ist also ein echter Alleskönner.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sensebox/resources/raw/master/gitbook_pictures/bme.png&quot; alt=&quot;Der BME680&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;technische-details&quot;&gt;Technische Details&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Schnelle Reaktionszeit von weniger als 10 Sekunden&lt;/li&gt;
  &lt;li&gt;“Plug-in-and-Go” senseBox kompatibel&lt;/li&gt;
  &lt;li&gt;Abweichung bei Gasmessungen von +-15%&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;anschluss-und-programmierung&quot;&gt;Anschluss und Programmierung&lt;/h2&gt;

&lt;p&gt;Mit dem mitgelieferten Verbindungskabel kannst du deinen Gassensor mit dem “I2C”-Port der senseBoxMCU verbinden. 
Ist dies erledigt können wir nun im Programmcode den Sensor initialisieren und uns die ersten Messwerte ausgeben lassen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Achtung&lt;/strong&gt;Der BME Gassensor ist nicht mit dem BMP280 Luftdrucksensor kompatibel. Das heißt du kannst nur einen der beiden gleichzeitig anschließen und auslesen!&lt;/p&gt;

&lt;p&gt;Als erstes muss die Bibliothek geladen und eine Instanz des Sensors erstellt werden.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-arduino&quot;&gt;#include &amp;lt;SenseBoxMCU.h&amp;gt;

BME680_Class BME680;

void setup(){
    // Normalen seriellen Port initialisieren 
    Serial.begin(9600);
    while(!Serial);

    // Starten des Sensors
    BME680.begin(I2C_STANDARD_MODE);
    delay(2000);

    // Oversampling der Sensoren festlegen
    BME680.setOversampling(TemperatureSensor, Oversample16);
    BME680.setOversampling(HumiditySensor, Oversample16);
    BME680.setOversampling(PressureSensor, Oversample16);
    Serial.println(F(&quot;- Setting IIR filter to a value of 4 samples&quot;));
    // IIR Filter auf 4 Werte setzen
    BME680.setIIRFilter(IIR4);
    BME680.setGas(320, 150);
}

void loop(){
    // Variable um Messwerte zu speichern
    static int32_t temperature, humidity, pressure, gas;

    // Aktuelle Messwerte auslesen und speichern
    BME680.getSensorData(temperature, humidity, pressure, gas); 
    
    // rel. Luftfeuchte in milli-prozent
    Serial.print(humidity / 1000.0, 2);                      
    Serial.print(F(&quot;%rel. Luftfeuchte &quot;));
    
    // Luftdruck in Hectopascals
    Serial.print(pressure / 100.0, 2);                       
    Serial.print(F(&quot;hPa &quot;));

    // Luftqualität in mOhm
    Serial.print(gas / 100.0, 2);                            
    Serial.println(F(&quot;mOhm&quot;));
    delay(5000);
}
&lt;/code&gt;&lt;/pre&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><summary type="html">Mit dem Sensor BME680 kannst du eine verschiedene Auswahl an Phänomenen messen. Lufttemperatur, relative Luftfeuchtigkeit, Luftdruck und Luftqualität können mit dem BME680 bestimmt werden. Er ist also ein echter Alleskönner.</summary></entry><entry><title type="html">Bodenfeuchte- und Temperatursensor</title><link href="http://localhost:4000/sensoren/sensoren-truebner/" rel="alternate" type="text/html" title="Bodenfeuchte- und Temperatursensor" /><published>2020-03-11T00:00:00+00:00</published><updated>2020-03-11T00:00:00+00:00</updated><id>http://localhost:4000/sensoren/sensoren-truebner</id><content type="html" xml:base="http://localhost:4000/sensoren/sensoren-truebner/">&lt;h1 id=&quot;head&quot;&gt;Bodentemperatur- &amp;amp; Feuchtigkeitssensor&lt;/h1&gt;

&lt;p&gt;Der truebner SMT50 ist ein kapazitiver Bodentemperatur- und Feuchtigkeitssensor und eignet sich daher gut für diverse Anwendung im heimischen Garten. Kapazitive Bodenfeuchtesensoren erzeugen ein elektrisches Feld um ihre Messelektroden herum. Das Feld dringt in den umgebenden Boden ein. Die Messelektronik des Sensors ermittelt die resultierende elektrische Kapazität der Elektroden. Je höher der Wassergehalt im Boden ist,desto größer wird die Messkapazität des Sensors.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sensebox/resources/raw/master/gitbook_pictures/smt50_top.png&quot; alt=&quot;Bodentemperatur- &amp;amp; Feuchtigkeit&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;technische-details&quot;&gt;Technische Details&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Versorgungsspannung: 3.3 - 30 VDC (Gleichspannung)&lt;/li&gt;
  &lt;li&gt;Stromaufnahme ca. 2.7 mA (gemessen bei 12VDC)&lt;/li&gt;
  &lt;li&gt;Messbereich volumetrischer Wassergehalt: 0 – 50 % (bei +/- 3% Genauigkeit)&lt;/li&gt;
  &lt;li&gt;Messbereich Temperatur: -20 bis +85 °C (bei +/- 1,0°C Genauigkeit)&lt;/li&gt;
  &lt;li&gt;Messverfahren: FDR (Frequency Domain Response)&lt;/li&gt;
  &lt;li&gt;Messsignal: symmetrisch, bipolar differentiell&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;maße&quot;&gt;Maße&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Abmessungen: ca. 13,5 cm x 2,15 cm&lt;/li&gt;
  &lt;li&gt;Gewicht inkl. 10m Kabel: ca. 235 g&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;programmierung-arduino&quot;&gt;Programmierung (Arduino)&lt;/h2&gt;

&lt;h2 id=&quot;programmierung-blockly&quot;&gt;Programmierung (Blockly)&lt;/h2&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><summary type="html">Bodentemperatur- &amp;amp; Feuchtigkeitssensor</summary></entry><entry><title type="html">Temperatur- und Luftfeuchtigkeitssensor</title><link href="http://localhost:4000/sensoren/sensoren-temperatur-luftfeuchte/" rel="alternate" type="text/html" title="Temperatur- und Luftfeuchtigkeitssensor" /><published>2020-03-11T00:00:00+00:00</published><updated>2020-03-11T00:00:00+00:00</updated><id>http://localhost:4000/sensoren/sensoren-temperatur-luftfeuchte</id><content type="html" xml:base="http://localhost:4000/sensoren/sensoren-temperatur-luftfeuchte/">&lt;h1 id=&quot;head&quot;&gt;Temperatur- und Luftfeuchtesensor&lt;/h1&gt;
&lt;p&gt;Der HDC1080 ist ein digitaler Feuchtigkeits- und Temperatursensor. Der Sensor hat eine hohe Genauigkeit und eine sehr geringe Stromaufnahme und passt dadurch ideal zur senseBox. Die Sensoren sind ab Werk kalibirert und können direkt eingesetzt werden.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sensebox/resources/raw/master/gitbook_pictures/hds%20top.png&quot; alt=&quot;Temperatur und Luftfeuchtesensor&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;technische-information&quot;&gt;Technische Information&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;“Plug-in-and-Go” senseBox kompatibel&lt;/li&gt;
  &lt;li&gt;Relative Luftfeuchte (RH) Betriebsbereich 0% bis 100%&lt;/li&gt;
  &lt;li&gt;14 Bit Messauflösung&lt;/li&gt;
  &lt;li&gt;Relative Luftfeuchte Genauigkeit ±4%&lt;/li&gt;
  &lt;li&gt;Temperatur Genauigkeit ±0.2°C&lt;/li&gt;
  &lt;li&gt;2100nA Stromzufuhr&lt;/li&gt;
  &lt;li&gt;Betriebsspannung 2.7 V bis 5.5 V&lt;/li&gt;
  &lt;li&gt;I2C Schnittstelle&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;programmierung&quot;&gt;Programmierung&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-arduino&quot;&gt;#include &quot;SenseBoxMCU.h&quot;
#include &amp;lt;Adafruit_HDC1000.h&amp;gt;
#include &amp;lt;SPI.h&amp;gt;

HDC1080 hdc;

void setup(){
    Serial.begin(9600);
    hdc.begin();
}

void loop(){
    Serial.print(&quot;Temperature: &quot;);
    Serial.println(hdc.getTemperature());
    Serial.print(&quot;Humidity: &quot;);
    Serial.println(hdc.getHumidity());
}
&lt;/code&gt;&lt;/pre&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><summary type="html">Temperatur- und Luftfeuchtesensor Der HDC1080 ist ein digitaler Feuchtigkeits- und Temperatursensor. Der Sensor hat eine hohe Genauigkeit und eine sehr geringe Stromaufnahme und passt dadurch ideal zur senseBox. Die Sensoren sind ab Werk kalibirert und können direkt eingesetzt werden.</summary></entry><entry><title type="html">Luftdruck- und Temperatursensor</title><link href="http://localhost:4000/sensoren/sensoren-luftdruck-temperatur/" rel="alternate" type="text/html" title="Luftdruck- und Temperatursensor" /><published>2020-03-11T00:00:00+00:00</published><updated>2020-03-11T00:00:00+00:00</updated><id>http://localhost:4000/sensoren/sensoren-luftdruck-temperatur</id><content type="html" xml:base="http://localhost:4000/sensoren/sensoren-luftdruck-temperatur/">&lt;p&gt;Dieser Sensor misst den Luftdruck und die Temperatur und basiert auf dem BMP280 Sensor von Bosch.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sensebox/resources/raw/master/gitbook_pictures/bmp%20top.png&quot; alt=&quot;Der Luftdruck- und Temperatursensor&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;technische-informationen&quot;&gt;Technische Informationen&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;“Plug-in-and-Go” senseBox kompatibel&lt;/li&gt;
  &lt;li&gt;Betriebsdruck 300 bis 1100 hPa&lt;/li&gt;
  &lt;li&gt;Relative Präzision ±0.12 hPa&lt;/li&gt;
  &lt;li&gt;Absolute Präzision ±1 hPa&lt;/li&gt;
  &lt;li&gt;Betriebsversorgungsstrom 2.7μA bei 1 Hz Sampling Frequenz&lt;/li&gt;
  &lt;li&gt;Maße: 25mm x 25mm x 9mm&lt;/li&gt;
  &lt;li&gt;Gewicht: 2,4 g&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;programmierung&quot;&gt;Programmierung&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-arduino&quot;&gt;#include &quot;SenseBoxMCU.h&quot;
#include &amp;lt;SPI.h&amp;gt;

BMP280 bmp_sensor;

void setup() {
  Serial.begin(9600);
  bmp_sensor.begin();
}

void loop() {
    Serial.print(&quot;Pressure: &quot;);
    Serial.println(bmp_sensor.getPressure());
    Serial.print(&quot;Temperature: &quot;);
    Serial.println(bmp_sensor.getTemperature());
    Serial.print(&quot;Altitude: &quot;);
    Serial.println(bmp_sensor.getAltitude(1000));
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;programmierung-blockly&quot;&gt;Programmierung (Blockly)&lt;/h2&gt;

&lt;p&gt;In Blockly kann der Sensor über folgenden Block ausgelesen werden:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sensebox/resources/raw/master/gitbook_pictures/bmp%20top.png&quot; alt=&quot;Der Luftdruck- und Temperatursensor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Im Block kannst du zwischen Luftdruck und Temperatur auswählen.&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><summary type="html">Dieser Sensor misst den Luftdruck und die Temperatur und basiert auf dem BMP280 Sensor von Bosch.</summary></entry><entry><title type="html">Umweltsensor</title><link href="http://localhost:4000/sensoren/sensoren-lautstaerke/" rel="alternate" type="text/html" title="Umweltsensor" /><published>2020-03-11T00:00:00+00:00</published><updated>2020-03-11T00:00:00+00:00</updated><id>http://localhost:4000/sensoren/sensoren-lautstaerke</id><content type="html" xml:base="http://localhost:4000/sensoren/sensoren-lautstaerke/">&lt;h1 id=&quot;head&quot;&gt;Lautstärkesensor&lt;/h1&gt;
&lt;p&gt;Der DFRobot SEN0232 misst die Lautstärke und gibt die Messwerte in Dezibel aus.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sensebox/resources/raw/master/gitbook_pictures/decibel_meter.jpg&quot; alt=&quot;Der Geräuschpegel-Sensor&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;technische-informationen&quot;&gt;Technische Informationen&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Maße: 60mm x 43mm x 9mm&lt;/li&gt;
  &lt;li&gt;“Plug-in-and-Go” senseBox kompatibel&lt;/li&gt;
  &lt;li&gt;Eingangsspannung: 3,3-5V&lt;/li&gt;
  &lt;li&gt;Ausgangsspannung: 0,6-2,6V&lt;/li&gt;
  &lt;li&gt;Messspanne: zwischen 30dBA und 130 dBA akkurat&lt;/li&gt;
  &lt;li&gt;Messintervall: 125ms&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sensebox/resources/raw/master/gitbook_pictures/SoundLevelMeter.png&quot; alt=&quot;Anschluss des Sensors&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;programmierung-arduino&quot;&gt;Programmierung (Arduino)&lt;/h2&gt;

&lt;p&gt;Im ersten Code-Snippet wird lediglich die Eingangsspannung ausgelesen und in Dezibel konvertiert. Der Wert wird auf der Konsole in Arduino angezeigt.
Sind diese halbwegs nachvollziehbar - werden größer wenn man z.B. in der Nähe des Sensors klatscht und werden dementsprechend kleiner, wenn keine wahrnehmbare Geräuschkulisse vorliegt - dann ist der Sensor einsatzbereit.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-arduino&quot;&gt;#define SoundSensorPin A1  //this pin read the analog voltage from the sound level meter
#define VREF  5.0  //voltage on AREF pin,default:operating voltage

void setup()
{
    Serial.begin(115200);
}

void loop()
{
    float voltageValue,dbValue;
    voltageValue = analogRead(SoundSensorPin) / 1024.0 * VREF;
    dbValue = voltageValue * 50.0;  //convert voltage to decibel value
    Serial.print(dbValue,1);
    Serial.println(&quot; dBA&quot;);
    delay(125);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;programmierung-blockly&quot;&gt;Programmierung (Blockly)&lt;/h2&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><summary type="html">Lautstärkesensor Der DFRobot SEN0232 misst die Lautstärke und gibt die Messwerte in Dezibel aus.</summary></entry><entry><title type="html">Helligkeits- und UV-Sensor</title><link href="http://localhost:4000/sensoren/sensoren-helligkeit-uv/" rel="alternate" type="text/html" title="Helligkeits- und UV-Sensor" /><published>2020-03-11T00:00:00+00:00</published><updated>2020-03-11T00:00:00+00:00</updated><id>http://localhost:4000/sensoren/sensoren-helligkeit-uv</id><content type="html" xml:base="http://localhost:4000/sensoren/sensoren-helligkeit-uv/">&lt;p&gt;Auf diesem senseBox-Bauteil sind zwei Sensoren zusammengelegt.&lt;/p&gt;

&lt;p&gt;Die Lichtintensität wird mit dem TSL45315-Sensor von AMS-TAOS gemessen. Dieser Sensor erkennt die Lichtverhältnissen ähnlich dem menschlichen Auge und gibt die Helligkeitswerte direkt in Lux, mit großem Dynamikbereich (3 Lux bis 220k Lux), aus.&lt;/p&gt;

&lt;p&gt;Der zweite Sensor ist ein Vishay VEML6070 Ultravioletter (UV)-Lichtsensor. Dieser wandelt die Intensität des UV-Lichts der Sonne in digitale Daten um. Der Sensor hat eine hervorragende UV-Empfindlichkeit und Linearität über Filtron™-Technologie. Er hat eine gute UV-Strahlungsmessung auch bei langer Sonnen-UV-Belastung und kann exzellenter Temperaturschwankungen ausgleichen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sensebox/resources/raw/master/gitbook_pictures/tsl top.png&quot; alt=&quot;Beleuchtungsstärke und UV-Stahlung&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;technische-details&quot;&gt;Technische Details&lt;/h2&gt;

&lt;h3 id=&quot;belichtungssensor&quot;&gt;Belichtungssensor&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;3,3V - 5V tolerantes I2C/TWI Interface&lt;/li&gt;
  &lt;li&gt;Eingangsspannungsbereich: 3,3V - 5V&lt;/li&gt;
  &lt;li&gt;on-board 2,5V Spannungsregler&lt;/li&gt;
  &lt;li&gt;on-board Pegelwandler&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;uv-sensor&quot;&gt;UV-Sensor&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Betriebsspannung: 2,7V - 5,5V I2C Interface&lt;/li&gt;
  &lt;li&gt;Unterstützt Quittierungsfunktion (Active Acknowledge-Funktion)&lt;/li&gt;
  &lt;li&gt;Temperaturkompensation: -40°C bis +85°C&lt;/li&gt;
  &lt;li&gt;Software-Abschaltregelung für Immunität bei flackernden Leuchtstofflampen&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;maße&quot;&gt;Maße&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;25mm x 25mm x 9mm&lt;/li&gt;
  &lt;li&gt;Gewicht: 2,5 g&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;programmierung&quot;&gt;Programmierung&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-arduino&quot;&gt;#include &quot;SenseBoxMCU.h&quot;
#include &amp;lt;SPI.h&amp;gt;

TSL45315 tsl;
VEML6070 veml;

void setup() {
    Serial.begin(9600);
    tsl.begin();
    veml.begin();
}

void loop() {
    Serial.print(&quot;Illuminance: &quot;);
    Serial.println(tsl.getIlluminance());
    Serial.print(&quot;UV-Intensity: &quot;);
    Serial.println(veml.getUvIntesity());
}
&lt;/code&gt;&lt;/pre&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><summary type="html">Auf diesem senseBox-Bauteil sind zwei Sensoren zusammengelegt.</summary></entry><entry><title type="html">GPS</title><link href="http://localhost:4000/sensoren/sensoren-gps/" rel="alternate" type="text/html" title="GPS" /><published>2020-03-11T00:00:00+00:00</published><updated>2020-03-11T00:00:00+00:00</updated><id>http://localhost:4000/sensoren/sensoren-gps</id><content type="html" xml:base="http://localhost:4000/sensoren/sensoren-gps/">&lt;p&gt;Das GPS-Modul empfängt die Position (Längengrad/Breitengrad/Höhe) der senseBox. Diese kann für mobile Anwendungen, z.B. die mobile Datenübertragung auf die openSenseMap, genutzt werden. Dieser Sensor ist kompatibel mit den gängingen GNS Systemen (GPS, QZSS, GLONASS, BeiDou, Galileo) und basiert auf dem u-blox CAM-M8Q Multi GNSS Modul.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sensebox/resources/raw/master/gitbook_pictures/gps%20top.png&quot; alt=&quot;Der GPS-Sensor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Der GPS Sensor wird an einen I2C-Port angeschlossen.&lt;/p&gt;

&lt;h2 id=&quot;technische-details&quot;&gt;Technische Details&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;“Plug-in-and-Go” senseBox kompatibel durch Breakout-Board mit JST-Anschluss&lt;/li&gt;
  &lt;li&gt;Simultanempfang von GPS, QZSS, GLONASS, BeiDou&lt;/li&gt;
  &lt;li&gt;Navigationsempfindlichkeit von –167 dBm&lt;/li&gt;
  &lt;li&gt;Empfänger: 72-Kanal u-blox M8&lt;/li&gt;
  &lt;li&gt;Update-Rate: Single GNSS - bis zu 18Hz, Dual GNSS bis zu 10Hz&lt;/li&gt;
  &lt;li&gt;Stromaufnahme: 30mA im Dauerbetrieb bzw. 10mA Power Save Mode 1Hz bei 3V&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;programmierung&quot;&gt;Programmierung&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-arduino&quot;&gt;#include &amp;lt;senseBoxIO.h&amp;gt;
#include &amp;lt;TinyGPS++.h&amp;gt;
#include &amp;lt;SPI.h&amp;gt;
#include &amp;lt;Wire.h&amp;gt;

Wire.requestFrom(0x42,10);
while (Wire.available())
    gps.encode(Wire.read());
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;programmierung-blockly&quot;&gt;Programmierung (Blockly)&lt;/h2&gt;

&lt;p&gt;In Blockly kann der Sensor über folgenden Block ausgelesen werden:&lt;/p&gt;

&lt;p&gt;Im Block kannst du zwischen Luftdruck und Temperatur auswählen.&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><summary type="html">Das GPS-Modul empfängt die Position (Längengrad/Breitengrad/Höhe) der senseBox. Diese kann für mobile Anwendungen, z.B. die mobile Datenübertragung auf die openSenseMap, genutzt werden. Dieser Sensor ist kompatibel mit den gängingen GNS Systemen (GPS, QZSS, GLONASS, BeiDou, Galileo) und basiert auf dem u-blox CAM-M8Q Multi GNSS Modul.</summary></entry><entry><title type="html">Feinstaubsensor</title><link href="http://localhost:4000/sensoren/sensoren-feinstaub/" rel="alternate" type="text/html" title="Feinstaubsensor" /><published>2020-03-11T00:00:00+00:00</published><updated>2020-03-11T00:00:00+00:00</updated><id>http://localhost:4000/sensoren/sensoren-feinstaub</id><content type="html" xml:base="http://localhost:4000/sensoren/sensoren-feinstaub/">&lt;p&gt;Mit diesem Sensor SDS011 ist es möglich die Feinstaubkonzentration in der Luft zu bestimmen. Der Sensor gibt zwei Werte aus: Die Konzentration von PM2.5 (Partikel &amp;lt; 2.5 um) und PM10 (Partikel &amp;lt; 10 um). Dieser Sensor ist mit einem kleinen Ventilator ausgestattet, um Luft anzusaugen. In seinem Inneren befindet sich ein Laser, der zusammen mit einer Photodiode die Anzahl der Partikel misst. Die Ergebnisse der Messungen werden in µg/m³ (Mikrogramm pro Kubikmeter) angegeben.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sensebox/resources/raw/master/gitbook_pictures/feinstaub_top.png&quot; alt=&quot;Feinstaubsensor für PM10 und PM2.5&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;technische-details&quot;&gt;Technische Details&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;“Plug-in-and-Go” senseBox kompatibel&lt;/li&gt;
  &lt;li&gt;Schnelle Reaktionszeit von weniger als 10 Sekunden&lt;/li&gt;
  &lt;li&gt;Hohe Auflösung bis zu 0.3µg/m3&lt;/li&gt;
  &lt;li&gt;Mehrfach wissenschaftliche Prüfung der Datengenauigkeit&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;programmierung-arduino&quot;&gt;Programmierung (Arduino)&lt;/h2&gt;

&lt;p&gt;Ist dies erledigt können wir nun im Programmcode den Sensor initialisieren und uns die ersten Messwerte ausgeben lassen.&lt;/p&gt;

&lt;p&gt;Als erstes muss eine Instanz des Sensors erstellt werden. Dazu erstellen wir noch 2 Variablen in denen wir unsere beiden Messwerte für PM10 und PM2.5 speichern.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-arduino&quot;&gt;#include &quot;SenseBoxMCU.h&quot;
#include &amp;lt;SPI.h&amp;gt;
#include &amp;lt;Wire.h&amp;gt;

SDS011 my_sds(Serial1) // Serial1 gibt hier den Seriellen Port an, an dem du den Sensor angeschlossen hast
float p10,p25

```arduino
void setup(){
    // Normalen seriellen Port initialisieren 
    Serial.begin(9600);
    while(!Serial);
    // Seriellen Port an dem unsere Sensor angeschlossen ist initialisieren
    Serial1.begin(9600);
    delay(5000);
}

void loop(){
    // Variablen den gemessenen Feinstaubwerte zuweisen
    p10 = my_sds.getPm10();
    p25 = my_sds.getPm25();
    //Werte in der Konsole drucken
    Serial.println(&quot;P2.5: &quot;+String(p25));
    Serial.println(&quot;P10:  &quot;+String(p10));
    delay(1000);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;programmierung-blockly&quot;&gt;Programmierung (Blockly)&lt;/h2&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><summary type="html">Mit diesem Sensor SDS011 ist es möglich die Feinstaubkonzentration in der Luft zu bestimmen. Der Sensor gibt zwei Werte aus: Die Konzentration von PM2.5 (Partikel &amp;lt; 2.5 um) und PM10 (Partikel &amp;lt; 10 um). Dieser Sensor ist mit einem kleinen Ventilator ausgestattet, um Luft anzusaugen. In seinem Inneren befindet sich ein Laser, der zusammen mit einer Photodiode die Anzahl der Partikel misst. Die Ergebnisse der Messungen werden in µg/m³ (Mikrogramm pro Kubikmeter) angegeben.</summary></entry><entry><title type="html">Editoren für die senseBox</title><link href="http://localhost:4000/allgemein/sensebox-editoren/" rel="alternate" type="text/html" title="Editoren für die senseBox" /><published>2020-03-11T00:00:00+00:00</published><updated>2020-03-11T00:00:00+00:00</updated><id>http://localhost:4000/allgemein/sensebox-editoren</id><content type="html" xml:base="http://localhost:4000/allgemein/sensebox-editoren/">&lt;h1 id=&quot;programmieren-der-sensebox-mcu-mit-den-verschiedenen-editoren&quot;&gt;Programmieren der senseBox MCU mit den verschiedenen Editoren&lt;/h1&gt;

&lt;p&gt;Du kannst die senseBox MCU mithilfe von drei verschiedenen Editoren Programmieren.&lt;/p&gt;

&lt;h2 id=&quot;blockly-für-sensebox&quot;&gt;Blockly für senseBox&lt;/h2&gt;

&lt;p&gt;Mit Blockly für senseBox kannst du deine senseBox MCU über eine grafische Programmieroberfläche Programmieren. Auf dem Computer muss keine Software installiert werden und du kannst direkt loslegen. Für Tablets gibt es eine App, sodass auch über ein Tablet drahtlos die senseBox Programmiert werden kann&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-11-sensebox-editoren/blockly.png&quot; alt=&quot;Blockly&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;arduino-ide&quot;&gt;Arduino IDE&lt;/h2&gt;

&lt;p&gt;Die Arduino IDE kannst du unter &lt;a href=&quot;https://arduino.cc/downloads&quot;&gt;kostenlos herunterladen&lt;/a&gt;. Die Arduino IDE bietet dir den kompletten Zugriff auf alle Funktionen, die die Programmiersprache Arduino bereithält. Über die Arduino IDE kannst du auch zusätzliche Sensoren und Bauteile, die nicht in Blockly für senseBox oder openRoberta, enthalten sind programmieren. Die Arduino IDE muss auf dem Computer installiert werden und zusätzlich muss ein Board Support Package für die senseBox MCU installiert werden. Wie genau das funktioniert erfährst.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-11-sensebox-editoren/arduino.png&quot; alt=&quot;Arduino-IDE&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;openroberta&quot;&gt;openRoberta&lt;/h2&gt;

&lt;p&gt;openRoberta ist eine weitere Möglichkeit die senseBox zu programmieren. Das openRoberta lab benötigt keine Installation auf deinem Computer und bietet einen ähnlichen Funktionsumfang wie Blockly für senseBox.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-11-sensebox-editoren/nepo.png&quot; alt=&quot;NEPO&quot; /&gt;&lt;/p&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><summary type="html">Programmieren der senseBox MCU mit den verschiedenen Editoren</summary></entry><entry><title type="html">Registrieren einer neuen senseBox</title><link href="http://localhost:4000/opensensemap/opensensemap-register/" rel="alternate" type="text/html" title="Registrieren einer neuen senseBox" /><published>2020-03-11T00:00:00+00:00</published><updated>2020-03-11T00:00:00+00:00</updated><id>http://localhost:4000/opensensemap/opensensemap-register</id><content type="html" xml:base="http://localhost:4000/opensensemap/opensensemap-register/">&lt;p&gt;Um eine neue senseBox auf der openSenseMap zu registrieren, muss zunächst unter &lt;em&gt;Anmelden&lt;/em&gt; ein Nutzer-Account erstellt werden.
Anschließend ist unter dem User-Logo oben rechts das Dashboard zu finden, über welches senseBoxen hinzugefügt und &lt;a href=&quot;osem_manage-boxes.md&quot;&gt;verwaltet&lt;/a&gt; werden können.&lt;/p&gt;

&lt;p&gt;Unter &lt;em&gt;Neue senseBox&lt;/em&gt; kann nun eine neue senseBox registriert werden. Die folgenden Angaben sind notwendig:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Name der senseBox&lt;/strong&gt;: z.B. der Standort&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Aufstellungsort&lt;/strong&gt;: dient der Filterung von Boxen&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Standort&lt;/strong&gt;: kann über die Karte ausgewählt werden&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Modell&lt;/strong&gt;: bestimmt die Sensorkonfiguration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Es gibt eine Vorauswahl für verschiedene Modelle.
Falls eine nicht vorhandene Sensorkonfiguration vorliegt, können einzelne Sensoren unter &lt;em&gt;Manuelle Konfiguration&lt;/em&gt; von Hand hinzugefügt werden.
Wie dies im Detail funktioniert ist unter &lt;a href=&quot;osem_custom_sensor.md&quot;&gt;Andere Plattformen&lt;/a&gt; beschrieben.&lt;/p&gt;

&lt;p&gt;Nachdem die Registrierung abgeschlossen wurde, wird ein Arduino-Sketch angezeigt, welcher die angegebenen Sensoren ausliest und deren Daten regelmäßig zur openSenseMap überträgt.
Um diesen auf die senseBox zu übertragen, wird die &lt;a href=&quot;https://www.arduino.cc/en/Main/Software&quot;&gt;Arduino IDE&lt;/a&gt; benötigt, eine exemplarische Installations-Anleitung für die &lt;em&gt;senseBox:home&lt;/em&gt; ist &lt;a href=&quot;https://home.books.sensebox.de/de/software_installation.html&quot;&gt;hier&lt;/a&gt; zu finden.&lt;/p&gt;

&lt;h2 id=&quot;erweiterte-konfiguration&quot;&gt;Erweiterte Konfiguration&lt;/h2&gt;
&lt;p&gt;Es besteht die Möglichkeit neben der &lt;a href=&quot;osem_api.md&quot;&gt;HTTP REST API&lt;/a&gt; auch andere Schnittstellen zur Datenübertragung zu nutzen.
Einstellungen hierfür müssen unter dem entsprechenden Reiter im Abschnitt &lt;em&gt;Erweitert&lt;/em&gt; vorgenommen werden.
Detaillierte Anleitungen dazu sind hier zu finden:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;mqtt_client.md&quot;&gt;MQTT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;ttn_integration.md&quot;&gt;TheThingsNetwork&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>{&quot;name&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil}</name></author><summary type="html">Um eine neue senseBox auf der openSenseMap zu registrieren, muss zunächst unter Anmelden ein Nutzer-Account erstellt werden. Anschließend ist unter dem User-Logo oben rechts das Dashboard zu finden, über welches senseBoxen hinzugefügt und verwaltet werden können.</summary></entry></feed>